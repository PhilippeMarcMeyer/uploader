/*! jQuery Uploader Plugin v0.1.0 | (c) 2014 Fengyuan Chen */
!function(a){"function"==typeof define&&define.amd?define(["jquery"],a):a(window.jQuery)}(function(a){"use strict";function b(b,c){this.$fileInput=a(b),this.init(c)}b.defaults={autoUpload:!0,url:void 0,dataType:"json",data:{},fileType:void 0,singleUploads:!0,maxLength:void 0,maxSize:void 0,beforeUpload:function(a){console.log(a)},success:function(){console.log(b.messages.success)},error:function(a){console.log(a||b.messages.error)}},b.messages={input:"The current borwser doesn't support file input.",type:'The type of the input element must be "file".',fileType:"The type of the file must be <%= type %>.",length:"The number of selected files is exceeded the limit of <%= length %>.",size:'The size of file "<%= name %>" is exceeded the limit of <%= size %>.',unselected:"Please select files.",success:"Upload Done.",error:"Upload Error.",crossOrigin:"The current borwser doesn't support cross origin upload."},b.prototype={constructor:b,support:{fileInput:!a('<input type="file">').prop("disabled"),fileList:!!a('<input type="file">').prop("files"),fileReader:!!window.FileReader,formData:!!window.FormData},init:function(c){var d=this.$fileInput.data(),e=this.$fileInput.attr("name"),f=this.$fileInput.attr("type");if(!this.support.fileInput)throw new Error(b.messages.input);if("file"!==f)throw new Error(b.messages.type);e&&!d.name&&(d.name=e),this.defaults=a.extend({},b.defaults,d,c),this.support.formData?this.xhrUpload=!0:(this.xhrUpload=!1,this.initUploader()),this.enable()},enabled:!1,enable:function(){this.enabled||(this.enabled=!0,this.$fileInput.on("change",a.proxy(this.serialize,this)))},disabled:!0,disable:function(){this.disabled||(this.disabled=!0,this.$fileInput.off("change"))},serialize:function(){var a,b,c,d;if(this.i=0,this.length=0,this.files={},this.support.fileList){for(a=this.$fileInput.prop("files"),b=this.checkLength(a.length),d=0;b>d;d++)c=a[d],this.isValidFile(c)&&(this.files[this.i++]=c,this.read(c));this.length=this.i,0===this.length&&this.$fileInput.val("")}else this.length=1,this.defaults.beforeUpload(null);this.defaults.autoUpload&&this.start()},read:function(a){var c=this,d=null,e={name:a.name,type:a.type,extension:a.name.match(/([^\.]\w+)$/)[1],size:b.fn.formatSize(a.size)};this.support.fileReader?(d=new FileReader,d.readAsDataURL(a),d.onload=function(){e.url=this.result},d.onloadend=function(){c.defaults.beforeUpload(e)}):this.defaults.beforeUpload(e)},checkLength:function(a){var c=this.defaults.maxLength;return c&&a>c&&(a=c,this.defaults.error(b.messages.length.replace("<%= length %>",a))),a},isValidFile:function(a){var c=b.fn.parseType(this.defaults.fileType),d=b.fn.parseSize(this.defaults.maxSize),e=b.fn.formatSize(d);return c.regex.test(a.name)||c.regex.test(a.type)?d>0&&d<a.size?(this.defaults.error(b.messages.size.replace("<%= name %>",a.name).replace("<%= size %>",e)),!1):!0:(this.defaults.error(b.messages.fileType.replace("<%= type %>",c.value)),!1)},start:function(){return this.length&&0!==this.length?(this.i=0,this.upload(),this.$fileInput.prop("disabled",!0),void 0):(this.defaults.error(b.messages.unselected),void 0)},next:function(){this.i++,this.i<this.length?this.upload():this.stop()},stop:function(){this.$fileInput.prop("disabled",!1),this.$fileInput.val(""),this.length=0,this.files=null},upload:function(){var b={},c=this;return this.xhrUpload?(this.support.fileList?(b=new FormData,a.each(this.defaults.data,function(a,c){b.append(a,c)}),this.defaults.singleUploads?b.append(this.defaults.name,this.files[this.i]):(this.i=this.length,b.append(this.defaults.name,this.files))):b=new FormData(this.$uploader.find("form")[0]),a.ajax({type:"post",url:this.defaults.url,data:b,dataType:this.defaults.dataType,processData:!1,contentType:!1,success:function(a){c.defaults.success(a),c.next()},error:function(){c.defaults.error(),c.next()}}),void 0):(this.$button.click(),void 0)},initUploader:function(){var c=Math.random().toString().replace("0.",""),d=['<div id="uploader-'+c+'" style="display:inline;">','<form id="uploader-form-'+c+'" method="post" action="'+this.defaults.url+'" enctype="multipart/form-data" target="uploader-iframe-'+c+'" style="display:inline;">',b.fn.template(this.defaults.data),'<button type="submit" style="display:none;">Upload</button>',"</form>",'<iframe name="uploader-iframe-'+c+'" style="display:none;"></iframe>',"</div>"].join(""),e=a(d),f=this;this.$uploader=e,this.$fileInput.after(e),this.$uploader.find("form").append(this.$fileInput),this.$button=e.find("button"),this.$iframe=e.find("iframe"),this.$iframe.on("load",function(){var c,d,e;try{d=this.contentWindow,e=this.contentDocument,e=e?e:d.document,c=e?e.body.innerText:null}catch(g){throw new Error(b.messages.crossOrigin)}c?(c="string"==typeof c?a.parseJSON(c):c,f.defaults.success(c)):f.defaults.error(),f.stop()})}},b.fn={kilobyte:1024,megabyte:Math.pow(1024,2),gigabyte:Math.pow(1024,3),template:function(b){var c=[];return a.each(b,function(a,b){c.push('<input type="hidden" name="'+a+'" value="'+b+'">')}),c.join("")},parseType:function(b){var c={value:b,regex:/\.\w+$/};return b instanceof RegExp&&(c.regex=b),a.isArray(b)&&b.length>0&&(c.value=b.join(", "),b.length>1&&(b=a.map(b,function(a){return"("+a+")"})),c.regex=new RegExp("("+b.join("|")+")+$","i")),c},parseSize:function(a){var b;if("string"==typeof a)switch(b=a.match(/(\d*)(\w*)/),a=parseInt(b[1],10)||0,b[2].toUpperCase()){case"K":case"KB":a*=this.kilobyte;break;case"M":case"MB":a*=this.megabyte;break;case"G":case"GB":a*=this.gigabyte}return"number"==typeof a?a:-1},formatSize:function(a){return a=parseInt(a,10)||0,a>this.gigabyte?Math.floor(a/this.gigabyte)+"GB":a>this.megabyte?Math.floor(a/this.megabyte)+"MB":a>this.kilobyte?Math.floor(a/this.kilobyte)+"KB":a+"B"}},a.fn.uploader=function(c){return this.each(function(){a(this).data("uploader",new b(this,c))})},a.fn.uploader.Constructor=b,a.uploader=function(c,d){c.each(function(){a(this).data("uploader",new b(this,d))})},a.uploader.Constructor=b,a.uploader.setMessages=function(c){a.each(c,function(a,c){"undefined"!=typeof b.messages[a]&&(b.messages[a]=c)})},a(function(){a("*[data-uploader]").uploader()})});